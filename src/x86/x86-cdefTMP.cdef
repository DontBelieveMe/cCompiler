"aaa": [ax], [0x37], 
"aas": [ax], [0x3F], 
"aad": [ax, ib/ub], [0xD5], ib, 
"aam": [ax, ib/ub], [0xD4], ib, 
"adc": [al, ib/ub], [0x14], ib, 
"adc": [ax, iw/uw], [0x6615], iw, 
"adc": [eax, id/ud], [0x15], id, 
"adc": [r8/m8, ib/ub], [0x80], /2, ib, 
"adc": [r16/m16, iw/uw], [0x6681], /2, iw, 
"adc": [r32/m32, id/ud], [0x81], /2, id, 
"adc": [r16/m16, ib], [0x6683], /2, ib, 
"adc": [r32/m32, ib], [0x83], /2, ib, 
"adc": [r8/m8,r8], [0x10], /r, 
"adc": [r16/m16,r16], [0x6611], /r, 
"adc": [r32/m32,r32], [0x11], /r, 
"adc": [r8,r8/m8], [0x12], /r, 
"adc": [r16,r16/m16], [0x6613], /r, 
"adc": [r32,r32/m32], [0x13], /r, 
"add": [al, ib/ub], [0x04], ib, 
"add": [ax, iw/uw], [0x6605], iw, 
"add": [eax, id/ud], [0x05], id, 
"add": [r8/m8, ib/ub], [0x80], /0, ib, 
"add": [r16/m16, iw/uw], [0x6681], /0, iw, 
"add": [r32/m32, id/ud], [0x81], /0, id, 
"add": [r16/m16, ib], [0x6683], /0, ib, 
"add": [r32/m32, ib], [0x83], /0, ib, 
"add": [r8/m8,r8], [0x00], /r, 
"add": [r16/m16,r16], [0x6601], /r, 
"add": [r32/m32,r32], [0x01], /r, 
"add": [r8,r8/m8], [0x02], /r, 
"add": [r16,r16/m16], [0x6603], /r, 
"add": [r32,r32/m32], [0x03], /r, 
"and": [al, ib/ub], [0x24], ib, 
"and": [ax, iw/uw], [0x6625], iw, 
"and": [eax, id/ud], [0x25], id, 
"and": [rax, ud], [0x25], id, 
"and": [r8/m8, ib/ub], [0x80], /4, ib, 
"and": [r16/m16, iw/uw], [0x6681], /4, iw, 
"and": [r32/m32, id/ud], [0x81], /4, id, 
"and": [r64, ud], [0x81], /4, id, 
"and": [r16/m16, ib/ub], [0x6683], /4, ib, 
"and": [r32/m32, ib/ub], [0x83], /4, ib, 
"and": [r8/m8,r8], [0x20], /r, 
"and": [r16/m16,r16], [0x6621], /r, 
"and": [r32/m32,r32], [0x21], /r, 
"and": [r8,r8/m8], [0x22], /r, 
"and": [r16,r16/m16], [0x6623], /r, 
"and": [r32,r32/m32], [0x23], /r, 
"arpl": [r16/m16, Rr16], [0x63], /r, 
"bndcl": [bnd, r32/m32], [0xF30F1A], /r, 
"bndcl": [bnd, r64/m64], [0xF30F1A], /r, 
"bndcn": [bnd, r32/m32], [0xF20F1B], /r, 
"bndcn": [bnd, r64/m64], [0xF20F1B], /r, 
"bndcu": [bnd, r32/m32], [0xF20F1A], /r, 
"bndcu": [bnd, r64/m64], [0xF20F1A], /r, 
"bndldx": [bnd, mib], [0x0F1A], /r, 
"bndmk": [bnd, mem], [0xF30F1B], /r, 
"bndmov": [bnd, bnd/mem], [0x660F1A], /r, 
"bndmov": [bnd/mem, bnd], [0x660F1B], /r, 
"bndstx": [mib, bnd], [0x0F1B], /r, 
"bound": [r16, Rm32], [0x6662], /r, 
"bound": [r32, Rm64], [0x62], /r, 
"bsf": [r16, r16/m16], [0x660FBC], /r, 
"bsf": [r32, r32/m32], [0x0FBC], /r, 
"bsr": [r16, r16/m16], [0x660FBD], /r, 
"bsr": [r32, r32/m32], [0x0FBD], /r, 
"bswap": [r32], [0x0FC8], 
"bt": [r16/m16, ib/ub], [0x660FBA], /4, ib, 
"bt": [r32/m32, ib/ub], [0x0FBA], /4, ib, 
"bt": [r16/m16, r16], [0x660FA3], /r, 
"bt": [r32/m32, r32], [0x0FA3], /r, 
"btc": [r16/m16, ib/ub], [0x660FBA], /7, ib, 
"btc": [r32/m32, ib/ub], [0x0FBA], /7, ib, 
"btc": [r16/m16, r16], [0x660FBB], /r, 
"btc": [r32/m32, r32], [0x0FBB], /r, 
"btr": [r16/m16, ib/ub], [0x660FBA], /6, ib, 
"btr": [r32/m32, ib/ub], [0x0FBA], /6, ib, 
"btr": [r16/m16, r16], [0x660FB3], /r, 
"btr": [r32/m32, r32], [0x0FB3], /r, 
"bts": [r16/m16, ib/ub], [0x660FBA], /5, ib, 
"bts": [r32/m32, ib/ub], [0x0FBA], /5, ib, 
"bts": [r16/m16, r16], [0x660FAB], /r, 
"bts": [r32/m32, r32], [0x0FAB], /r, 
"call": [el16], [0x66E8], cw, 
"call": [el32], [0xE8], cd, 
"call": [r16/m16], [0x66FF], /2, 
"call": [r32/m32], [0xFF], /2, 
"call": [r64/m64], [0xFF], /2, 
"cbw": [ax], [0x6698], 
"cwde": [eax], [0x98], 
"cwd": [dx, ax], [0x6699], 
"cdq": [edx, eax], [0x99], 
"clac": [], [0x0F01CA], 
"clflush": [mem], [0x0FAE], /7, 
"clflushopt": [mem], [0x660FAE], /7, 
"cli": [], [0xFA], 
"clwb": [mem], [0x660FAE], /6, 
"clzero": [dszax], [0x0F01FC], 
"clc": [], [0xF8], 
"cld": [], [0xFC], 
"cmc": [], [0xF5], 
"cmovo": [r16, r16/m16], [0x660F40], /r, 
"cmovo": [r32, r32/m32], [0x0F40], /r, 
"cmovno": [r16, r16/m16], [0x660F41], /r, 
"cmovno": [r32, r32/m32], [0x0F41], /r, 
"cmovb/cmovnae/cmovc": [r16, r16/m16], [0x660F42], /r, 
"cmovb/cmovnae/cmovc": [r32, r32/m32], [0x0F42], /r, 
"cmovae/cmovnb/cmovnc": [r16, r16/m16], [0x660F43], /r, 
"cmovae/cmovnb/cmovnc": [r32, r32/m32], [0x0F43], /r, 
"cmove/cmovz": [r16, r16/m16], [0x660F44], /r, 
"cmove/cmovz": [r32, r32/m32], [0x0F44], /r, 
"cmovne/cmovnz": [r16, r16/m16], [0x660F45], /r, 
"cmovne/cmovnz": [r32, r32/m32], [0x0F45], /r, 
"cmovbe/cmovna": [r16, r16/m16], [0x660F46], /r, 
"cmovbe/cmovna": [r32, r32/m32], [0x0F46], /r, 
"cmova/cmovnbe": [r16, r16/m16], [0x660F47], /r, 
"cmova/cmovnbe": [r32, r32/m32], [0x0F47], /r, 
"cmovs": [r16, r16/m16], [0x660F48], /r, 
"cmovs": [r32, r32/m32], [0x0F48], /r, 
"cmovns": [r16, r16/m16], [0x660F49], /r, 
"cmovns": [r32, r32/m32], [0x0F49], /r, 
"cmovp/cmovpe": [r16, r16/m16], [0x660F4A], /r, 
"cmovp/cmovpe": [r32, r32/m32], [0x0F4A], /r, 
"cmovnp/cmovpo": [r16, r16/m16], [0x660F4B], /r, 
"cmovnp/cmovpo": [r32, r32/m32], [0x0F4B], /r, 
"cmovl/cmovnge": [r16, r16/m16], [0x660F4C], /r, 
"cmovl/cmovnge": [r32, r32/m32], [0x0F4C], /r, 
"cmovge/cmovnl": [r16, r16/m16], [0x660F4D], /r, 
"cmovge/cmovnl": [r32, r32/m32], [0x0F4D], /r, 
"cmovle/cmovng": [r16, r16/m16], [0x660F4E], /r, 
"cmovle/cmovng": [r32, r32/m32], [0x0F4E], /r, 
"cmovg/cmovnle": [r16, r16/m16], [0x660F4F], /r, 
"cmovg/cmovnle": [r32, r32/m32], [0x0F4F], /r, 
"cmp": [al, ib/ub], [0x3C], ib, 
"cmp": [ax, iw/uw], [0x663D], iw, 
"cmp": [eax, id/ud], [0x3D], id, 
"cmp": [r8/m8, ib/ub], [0x80], /7, ib, 
"cmp": [r16/m16, iw/uw], [0x6681], /7, iw, 
"cmp": [r32/m32, id/ud], [0x81], /7, id, 
"cmp": [r16/m16, ib], [0x6683], /7, ib, 
"cmp": [r32/m32, ib], [0x83], /7, ib, 
"cmp": [r8/m8, r8], [0x38], /r, 
"cmp": [r16/m16, r16], [0x6639], /r, 
"cmp": [r32/m32, r32], [0x39], /r, 
"cmp": [r8, r8/m8], [0x3A], /r, 
"cmp": [r16, r16/m16], [0x663B], /r, 
"cmp": [r32, r32/m32], [0x3B], /r, 
"cmpsb": [dszsi, Xeszdi], [0xA6], 
"cmpsw": [dszsi, Xeszdi], [0x66A7], 
"cmpsd": [dszsi, Xeszdi], [0xA7], 
"cmpxchg": [r8/m8, r8, al], [0x0FB0], /r, 
"cmpxchg": [r16/m16, r16, ax], [0x660FB1], /r, 
"cmpxchg": [r32/m32, r32, eax], [0x0FB1], /r, 
"cmpxchg8b": [m64, Xedx, Xeax, ecx, ebx], [0x0FC7], /1, 
"cpuid": [eax, Webx, Xecx, Wedx], [0x0FA2], 
"daa": [ax], [0x27], 
"das": [ax], [0x2F], 
"dec": [r16], [0x6648], 
"dec": [r32], [0x48], 
"dec": [r8/m8], [0xFE], /1, 
"dec": [r16/m16], [0x66FF], /1, 
"dec": [r32/m32], [0xFF], /1, 
"div": [ax, r8/m8], [0xF6], /6, 
"div": [dx, xax, r16/m16], [0x66F7], /6, 
"div": [edx, Xeax, r32/m32], [0xF7], /6, 
"idiv": [ax, r8/m8], [0xF6], /7, 
"idiv": [dx, xax, r16/m16], [0x66F7], /7, 
"idiv": [edx, Xeax, r32/m32], [0xF7], /7, 
"imul": [ax, r8/m8], [0xF6], /5, 
"imul": [dx, xax, r16/m16], [0x66F7], /5, 
"imul": [edx, Xeax, r32/m32], [0xF7], /5, 
"imul": [r16,r16/m16], [0x660FAF], /r, 
"imul": [r32,r32/m32], [0x0FAF], /r, 
"imul": [r16, r16/m16, ib], [0x666B], /r, ib, 
"imul": [r32, r32/m32, ib], [0x6B], /r, ib, 
"imul": [r16, r16/m16, iw/uw], [0x6669], /r, iw, 
"imul": [r32, r32/m32, id/ud], [0x69], /r, id, 
"in": [al, ib/ub], [0xE4], ib, 
"in": [ax, ib/ub], [0x66E5], ib, 
"in": [eax, ib/ub], [0xE5], ib, 
"in": [al, dx], [0xEC], 
"in": [ax, dx], [0x66ED], 
"in": [eax, dx], [0xED], 
"insb": [eszdi, dx], [0x6C], 
"insw": [eszdi, dx], [0x666D], 
"insd": [eszdi, dx], [0x6D], 
"inc": [r16], [0x6640], 
"inc": [r32], [0x40], 
"inc": [r8/m8], [0xFE], /0, 
"inc": [r16/m16], [0x66FF], /0, 
"inc": [r32/m32], [0xFF], /0, 
"int": [b/ub], [0xCD], ib, 
"int3": [], [0xCC], 
"into": [], [0xCE], 
"iret/iretd": [], [0xCF], 
"iretw": [], [0x66CF], 
"jo": [el8], [0x70], cb, 
"jno": [el8], [0x71], cb, 
"jb/jnae/jc": [el8], [0x72], cb, 
"jae/jnb/jnc": [el8], [0x73], cb, 
"je/jz": [el8], [0x74], cb, 
"jne/jnz": [el8], [0x75], cb, 
"jbe/jna": [el8], [0x76], cb, 
"ja/jnbe": [el8], [0x77], cb, 
"js": [el8], [0x78], cb, 
"jns": [el8], [0x79], cb, 
"jp/jpe": [el8], [0x7A], cb, 
"jnp/jpo": [el8], [0x7B], cb, 
"jl/jnge": [el8], [0x7C], cb, 
"jge/jnl": [el8], [0x7D], cb, 
"jle/jng": [el8], [0x7E], cb, 
"jg/jnle": [el8], [0x7F], cb, 
"jo": [el16], [0x660F80], cw, 
"jo": [el32], [0x0F80], cd, 
"jno": [el16], [0x660F81], cw, 
"jno": [el32], [0x0F81], cd, 
"jb/jnae/jc": [el16], [0x660F82], cw, 
"jb/jnae/jc": [el32], [0x0F82], cd, 
"jae/jnb/jnc": [el16], [0x660F83], cw, 
"jae/jnb/jnc": [el32], [0x0F83], cd, 
"je/jz": [el16], [0x660F84], cw, 
"je/jz": [el32], [0x0F84], cd, 
"jne/jnz": [el16], [0x660F85], cw, 
"jne/jnz": [el32], [0x0F85], cd, 
"jbe/jna": [el16], [0x660F86], cw, 
"jbe/jna": [el32], [0x0F86], cd, 
"ja/jnbe": [el16], [0x660F87], cw, 
"ja/jnbe": [el32], [0x0F87], cd, 
"js": [el16], [0x660F88], cw, 
"js": [el32], [0x0F88], cd, 
"jns": [el16], [0x660F89], cw, 
"jns": [el32], [0x0F89], cd, 
"jp/jpe": [el16], [0x660F8A], cw, 
"jp/jpe": [el32], [0x0F8A], cd, 
"jnp/jpo": [el16], [0x660F8B], cw, 
"jnp/jpo": [el32], [0x0F8B], cd, 
"jl/jnge": [el16], [0x660F8C], cw, 
"jl/jnge": [el32], [0x0F8C], cd, 
"jge/jnl": [el16], [0x660F8D], cw, 
"jge/jnl": [el32], [0x0F8D], cd, 
"jle/jng": [el16], [0x660F8E], cw, 
"jle/jng": [el32], [0x0F8E], cd, 
"jg/jnle": [el16], [0x660F8F], cw, 
"jg/jnle": [el32], [0x0F8F], cd, 
"jecxz": [cx, rel8], [0x67E3], cb, 
"jecxz": [ecx, rel8], [0xE3], cb, 
"jecxz": [ecx, rel8], [0x67E3], cb, 
"jecxz": [rcx, rel8], [0xE3], cb, 
"jmp": [el8], [0xEB], cb, 
"jmp": [el16], [0x66E9], cw, 
"jmp": [el32], [0xE9], cd, 
"jmp": [r32/m32], [0xFF], /4, 
"jmp": [r64/m64], [0xFF], /4, 
"lar": [r16, Rr16/m16], [0x660F02], /r, 
"lar": [r32, Rr32/m16], [0x0F02], /r, 
"lds": [r16, m16_16], [0x66C5], /r, 
"lds": [r32, m16_32], [0xC5], /r, 
"lea": [r16, mem], [0x678D], /r, 
"lea": [r32, mem], [0x8D], /r, 
"les": [r16, m16_16], [0x66C4], /r, 
"les": [r32, m16_32], [0xC4], /r, 
"lfs": [r16, m16_16], [0x660FB4], /r, 
"lfs": [r32, m16_32], [0x0FB4], /r, 
"lgs": [r16, m16_16], [0x660FB5], /r, 
"lgs": [r32, m16_32], [0x0FB5], /r, 
"lodsb": [al, Xdszsi], [0xAC], 
"lodsw": [ax, Xdszsi], [0x66AD], 
"lodsd": [eax, Xdszsi], [0xAD], 
"loop": [cx, rel8], [0x67E2], cb, 
"loop": [ecx, rel8], [0xE2], cb, 
"loop": [ecx, rel8], [0x67E2], cb, 
"loop": [rcx, rel8], [0xE2], cb, 
"loope": [cx, rel8], [0x67E1], cb, 
"loope": [ecx, rel8], [0xE1], cb, 
"loope": [ecx, rel8], [0x67E1], cb, 
"loope": [rcx, rel8], [0xE1], cb, 
"loopne": [cx, rel8], [0x67E0], cb, 
"loopne": [ecx, rel8], [0xE0], cb, 
"loopne": [ecx, rel8], [0x67E0], cb, 
"loopne": [rcx, rel8], [0xE0], cb, 
"lsl": [r16, Rr16/m16], [0x660F03], /r, 
"lsl": [r32, Rr32/m16], [0x0F03], /r, 
"lss": [r16, m16_16], [0x660FB2], /r, 
"lss": [r32, m16_32], [0x0FB2], /r, 
"mov": [r8/m8, r8], [0x88], /r, 
"mov": [r16/m16, r16], [0x6689], /r, 
"mov": [r32/m32, r32], [0x89], /r, 
"mov": [r8/m8, ib/ub], [0xC6], /0, ib, 
"mov": [r16/m16, iw/uw], [0x66C7], /0, iw, 
"mov": [r32/m32, id/ud], [0xC7], /0, id, 
"mov": [r8, ib/ub], [0xB0], ib, 
"mov": [r16, iw/uw], [0x66B8], iw, 
"mov": [r32, id/ud], [0xB8], id, 
"mov": [r8, r8/m8], [0x8A], /r, 
"mov": [r16, r16/m16], [0x668B], /r, 
"mov": [r32, r32/m32], [0x8B], /r, 
"mov": [r16/m16, sreg], [0x8C], /r, 
"mov": [r32, sreg], [0x8C], /r, 
"mov": [sreg, r16/m16], [0x8E], /r, 
"mov": [sreg, r32], [0x8E], /r, 
"mov": [al, moff8], [0xA0], 
"mov": [ax, moff16], [0x66A1], 
"mov": [eax, moff32], [0xA1], 
"mov": [moff8, al], [0xA2], 
"mov": [moff16, ax], [0x66A3], 
"mov": [moff32, eax], [0xA3], 
"mov": [r32, creg], [0x0F20], /r, 
"mov": [r64, creg], [0x0F20], /r, 
"mov": [creg, r32], [0x0F22], /r, 
"mov": [creg, r64], [0x0F22], /r, 
"mov": [r32, dreg], [0x0F21], /r, 
"mov": [r64, dreg], [0x0F21], /r, 
"mov": [dreg, r32], [0x0F23], /r, 
"mov": [dreg, r64], [0x0F23], /r, 
"movsb": [eszdi, Xdszsi], [0xA4], 
"movsw": [eszdi, Xdszsi], [0x66A5], 
"movsd": [eszdi, Xdszsi], [0xA5], 
"movsx": [r16, r8/m8], [0x660FBE], /r, 
"movsx": [r32, r8/m8], [0x0FBE], /r, 
"movsx": [r32, r16/m16], [0x0FBF], /r, 
"movzx": [r16, r8/m8], [0x660FB6], /r, 
"movzx": [r32, r8/m8], [0x0FB6], /r, 
"movzx": [r32, r16/m16], [0x0FB7], /r, 
"mul": [ax, r8/m8], [0xF6], /4, 
"mul": [dx, xax, r16/m16], [0x66F7], /4, 
"mul": [edx, Xeax, r32/m32], [0xF7], /4, 
"neg": [r8/m8], [0xF6], /3, 
"neg": [r16/m16], [0x66F7], /3, 
"neg": [r32/m32], [0xF7], /3, 
"nop": [], [0x90], 
"nop": [r16/m16], [0x660F1F], /0, 
"nop": [r32/m32], [0x0F1F], /0, 
"not": [r8/m8], [0xF6], /2, 
"not": [r16/m16], [0x66F7], /2, 
"not": [r32/m32], [0xF7], /2, 
"or": [al, ib/ub], [0x0C], ib, 
"or": [ax, iw/uw], [0x660D], iw, 
"or": [eax, id/ud], [0x0D], id, 
"or": [r8/m8, ib/ub], [0x80], /1, ib, 
"or": [r16/m16, iw/uw], [0x6681], /1, iw, 
"or": [r32/m32, id/ud], [0x81], /1, id, 
"or": [r16/m16, ib], [0x6683], /1, ib, 
"or": [r32/m32, ib], [0x83], /1, ib, 
"or": [r8/m8,r8], [0x08], /r, 
"or": [r16/m16,r16], [0x6609], /r, 
"or": [r32/m32,r32], [0x09], /r, 
"or": [r8,r8/m8], [0x0A], /r, 
"or": [r16,r16/m16], [0x660B], /r, 
"or": [r32,r32/m32], [0x0B], /r, 
"out": [b, al], [0xE6], ib, 
"out": [b, ax], [0x66E7], ib, 
"out": [b, eax], [0xE7], ib, 
"out": [dx, Ral], [0xEE], 
"out": [dx, Rax], [0x66EF], 
"out": [dx, Reax], [0xEF], 
"outsb": [dx, Rdszsi], [0x6E], 
"outsw": [dx, Rdszsi], [0x666F], 
"outsd": [dx, Rdszsi], [0x6F], 
"pause": [], [0xF390], 
"pcommit": [], [0x660FAEF8], 
"pop": [r16/m16], [0x668F], /0, 
"pop": [r32/m32], [0x8F], /0, 
"pop": [r64/m64], [0x8F], /0, 
"pop": [r16], [0x6658], 
"pop": [r32], [0x58], 
"pop": [r64], [0x58], 
"pop": [ds], [0x1F], 
"pop": [es], [0x07], 
"pop": [ss], [0x17], 
"pop": [fs], [0x0FA1], 
"pop": [gs], [0x0FA9], 
"popa": [], [0x6661], 
"popad": [], [0x61], 
"popf": [], [0x669D], 
"popfd": [], [0x9D], 
"popfq": [], [0x9D], 
"prefetchw": [mem], [0x0F0D], /1, 
"prefetchwt1": [mem], [0x0F0D], /2, 
"push": [r16/m16], [0x66FF], /6, 
"push": [r32/m32], [0xFF], /6, 
"push": [r64/m64], [0xFF], /6, 
"push": [r16], [0x6650], 
"push": [r32], [0x50], 
"push": [r64], [0x50], 
"push": [b], [0x6A], ib, 
"push": [w], [0x6668], iw, 
"push": [d/ud], [0x68], id, 
"push": [d], [0x68], id, 
"push": [cs], [0x0E], 
"push": [ss], [0x16], 
"push": [ds], [0x1E], 
"push": [es], [0x06], 
"push": [fs], [0x0FA0], 
"push": [gs], [0x0FA8], 
"pusha": [], [0x6660], 
"pushad": [], [0x60], 
"pushf": [], [0x669C], 
"pushfd": [], [0x9C], 
"pushfq": [], [0x9C], 
"rcl": [r8/m8, 1], [0xD0], /2, 
"rcl": [r8/m8, cl], [0xD2], /2, 
"rcl": [r8/m8, ib/ub], [0xC0], /2, ib, 
"rcl": [r16/m16, 1], [0x66D1], /2, 
"rcl": [r16/m16, cl], [0x66D3], /2, 
"rcl": [r16/m16, ib/ub], [0x66C1], /2, ib, 
"rcl": [r32/m32, 1], [0xD1], /2, 
"rcl": [r32/m32, cl], [0xD3], /2, 
"rcl": [r32/m32, ib/ub], [0xC1], /2, ib, 
"rcr": [r8/m8, 1], [0xD0], /3, 
"rcr": [r8/m8, cl], [0xD2], /3, 
"rcr": [r8/m8, ib/ub], [0xC0], /3, ib, 
"rcr": [r16/m16, 1], [0x66D1], /3, 
"rcr": [r16/m16, cl], [0x66D3], /3, 
"rcr": [r16/m16, ib/ub], [0x66C1], /3, ib, 
"rcr": [r32/m32, 1], [0xD1], /3, 
"rcr": [r32/m32, cl], [0xD3], /3, 
"rcr": [r32/m32, ib/ub], [0xC1], /3, ib, 
"rdfsbase": [r32], [0xF30FAE], /0, 
"rdgsbase": [r32], [0xF30FAE], /1, 
"rdrand": [r16], [0x660FC7], /6, 
"rdrand": [r32], [0x0FC7], /6, 
"rdseed": [r16], [0x660FC7], /7, 
"rdseed": [r32], [0x0FC7], /7, 
"ret": [], [0xC3], 
"ret": [w], [0xC2], iw, 
"rol": [r8/m8, 1], [0xD0], /0, 
"rol": [r8/m8, cl], [0xD2], /0, 
"rol": [r8/m8, ib/ub], [0xC0], /0, ib, 
"rol": [r16/m16, 1], [0x66D1], /0, 
"rol": [r16/m16, cl], [0x66D3], /0, 
"rol": [r16/m16, ib/ub], [0x66C1], /0, ib, 
"rol": [r32/m32, 1], [0xD1], /0, 
"rol": [r32/m32, cl], [0xD3], /0, 
"rol": [r32/m32, ib/ub], [0xC1], /0, ib, 
"ror": [r8/m8, 1], [0xD0], /1, 
"ror": [r8/m8, cl], [0xD2], /1, 
"ror": [r8/m8, ib/ub], [0xC0], /1, ib, 
"ror": [r16/m16, 1], [0x66D1], /1, 
"ror": [r16/m16, cl], [0x66D3], /1, 
"ror": [r16/m16, ib/ub], [0x66C1], /1, ib, 
"ror": [r32/m32, 1], [0xD1], /1, 
"ror": [r32/m32, cl], [0xD3], /1, 
"ror": [r32/m32, ib/ub], [0xC1], /1, ib, 
"rsm": [], [0x0FAA], 
"sar": [r8/m8, 1], [0xD0], /7, 
"sar": [r8/m8, cl], [0xD2], /7, 
"sar": [r8/m8, ib/ub], [0xC0], /7, ib, 
"sar": [r16/m16, 1], [0x66D1], /7, 
"sar": [r16/m16, cl], [0x66D3], /7, 
"sar": [r16/m16, ib/ub], [0x66C1], /7, ib, 
"sar": [r32/m32, 1], [0xD1], /7, 
"sar": [r32/m32, cl], [0xD3], /7, 
"sar": [r32/m32, ib/ub], [0xC1], /7, ib, 
"sbb": [al, ib/ub], [0x1C], ib, 
"sbb": [ax, iw/uw], [0x661D], iw, 
"sbb": [eax, id/ud], [0x1D], id, 
"sbb": [r8/m8, ib/ub], [0x80], /3, ib, 
"sbb": [r16/m16, iw/uw], [0x6681], /3, iw, 
"sbb": [r32/m32, id/ud], [0x81], /3, id, 
"sbb": [r16/m16, ib], [0x6683], /3, ib, 
"sbb": [r32/m32, ib], [0x83], /3, ib, 
"sbb": [r8/m8, r8], [0x18], /r, 
"sbb": [r16/m16, r16], [0x6619], /r, 
"sbb": [r32/m32, r32], [0x19], /r, 
"sbb": [r8, r8/m8], [0x1A], /r, 
"sbb": [r16, r16/m16], [0x661B], /r, 
"sbb": [r32, r32/m32], [0x1B], /r, 
"scasb": [al, Xeszdi], [0xAE], 
"scasw": [ax, Xeszdi], [0x66AF], 
"scasd": [eax, Xeszdi], [0xAF], 
"seto": [r8/m8], [0x0F90], /r, 
"setno": [r8/m8], [0x0F91], /r, 
"setb/setnae/setc": [r8/m8], [0x0F92], /r, 
"setae/setnb/setnc": [r8/m8], [0x0F93], /r, 
"sete/setz": [r8/m8], [0x0F94], /r, 
"setne/setnz": [r8/m8], [0x0F95], /r, 
"setbe/setna": [r8/m8], [0x0F96], /r, 
"seta/setnbe": [r8/m8], [0x0F97], /r, 
"sets": [r8/m8], [0x0F98], /r, 
"setns": [r8/m8], [0x0F99], /r, 
"setp/setpe": [r8/m8], [0x0F9A], /r, 
"setnp/setpo": [r8/m8], [0x0F9B], /r, 
"setl/setnge": [r8/m8], [0x0F9C], /r, 
"setge/setnl": [r8/m8], [0x0F9D], /r, 
"setle/setng": [r8/m8], [0x0F9E], /r, 
"setg/setnle": [r8/m8], [0x0F9F], /r, 
"sgdt": [mem], [0x0F01], /0, 
"shl/sal": [r8/m8, 1], [0xD0], /4, 
"shl/sal": [r8/m8, cl], [0xD2], /4, 
"shl/sal": [r8/m8, ib/ub], [0xC0], /4, ib, 
"shl/sal": [r16/m16, 1], [0x66D1], /4, 
"shl/sal": [r16/m16, cl], [0x66D3], /4, 
"shl/sal": [r16/m16, ib/ub], [0x66C1], /4, ib, 
"shl/sal": [r32/m32, 1], [0xD1], /4, 
"shl/sal": [r32/m32, cl], [0xD3], /4, 
"shl/sal": [r32/m32, ib/ub], [0xC1], /4, ib, 
"shr": [r8/m8, 1], [0xD0], /5, 
"shr": [r8/m8, cl], [0xD2], /5, 
"shr": [r8/m8, ib/ub], [0xC0], /5, ib, 
"shr": [r16/m16, 1], [0x66D1], /5, 
"shr": [r16/m16, cl], [0x66D3], /5, 
"shr": [r16/m16, ib/ub], [0x66C1], /5, ib, 
"shr": [r32/m32, 1], [0xD1], /5, 
"shr": [r32/m32, cl], [0xD3], /5, 
"shr": [r32/m32, ib/ub], [0xC1], /5, ib, 
"shld": [r16/m16, r16, cl], [0x660FA5], /r, 
"shld": [r16/m16, r16, ib/ub], [0x660FA4], /r, ib, 
"shld": [r32/m32, r32, cl], [0x0FA5], /r, 
"shld": [r32/m32, r32, ib/ub], [0x0FA4], /r, ib, 
"shrd": [r16/m16, r16, cl], [0x660FAD], /r, 
"shrd": [r16/m16, r16, ib/ub], [0x660FAC], /r, ib, 
"shrd": [r32/m32, r32, cl], [0x0FAD], /r, 
"shrd": [r32/m32, r32, ib/ub], [0x0FAC], /r, ib, 
"sidt": [mem], [0x0F01], /1, 
"sldt": [r16/m16], [0x660F00], /0, 
"sldt": [r32/m16], [0x0F00], /0, 
"smsw": [r16/m16], [0x660F01], /4, 
"smsw": [r32/m16], [0x0F01], /4, 
"stac": [], [0x0F01CB], 
"stc": [], [0xF9], 
"std": [], [0xFD], 
"sti": [], [0xFB], 
"stosb": [eszdi, Ral], [0xAA], 
"stosw": [eszdi, Rax], [0x66AB], 
"stosd": [eszdi, Reax], [0xAB], 
"str": [r16/m16], [0x660F00], /1, 
"str": [r32/m16], [0x0F00], /1, 
"sub": [al, ib/ub], [0x2C], ib, 
"sub": [ax, iw/uw], [0x662D], iw, 
"sub": [eax, id/ud], [0x2D], id, 
"sub": [r8/m8, ib/ub], [0x80], /5, ib, 
"sub": [r16/m16, iw/uw], [0x6681], /5, iw, 
"sub": [r32/m32, id/ud], [0x81], /5, id, 
"sub": [r16/m16, ib], [0x6683], /5, ib, 
"sub": [r32/m32, ib], [0x83], /5, ib, 
"sub": [r8/m8, r8], [0x28], /r, 
"sub": [r16/m16, r16], [0x6629], /r, 
"sub": [r32/m32, r32], [0x29], /r, 
"sub": [r8, r8/m8], [0x2A], /r, 
"sub": [r16, r16/m16], [0x662B], /r, 
"sub": [r32, r32/m32], [0x2B], /r, 
"test": [al, ib/ub], [0xA8], ib, 
"test": [ax, iw/uw], [0x66A9], iw, 
"test": [eax, id/ud], [0xA9], id, 
"test": [r8/m8, ib/ub], [0xF6], /0, ib, 
"test": [r16/m16, iw/uw], [0x66F7], /0, iw, 
"test": [r32/m32, id/ud], [0xF7], /0, id, 
"test": [r8/m8,r8], [0x84], /r, 
"test": [r16/m16,r16], [0x6685], /r, 
"test": [r32/m32,r32], [0x85], /r, 
"ud2": [], [0x0F0B], 
"verr": [r16/m16], [0x0F00], /4, 
"verw": [r16/m16], [0x0F00], /5, 
"wrfsbase": [r32], [0xF30FAE], /2, 
"wrgsbase": [r32], [0xF30FAE], /3, 
"xadd": [r8/m8, xr8], [0x0FC0], /r, 
"xadd": [r16/m16, xr16], [0x660FC1], /r, 
"xadd": [r32/m32, Xr32], [0x0FC1], /r, 
"xchg": [ax, xr16], [0x6690], 
"xchg": [eax, Xr32], [0x90], 
"xchg": [r16, xax], [0x6690], 
"xchg": [r32, Xeax], [0x90], 
"xchg": [r8/m8, xr8], [0x86], /r, 
"xchg": [r16/m16, xr16], [0x6687], /r, 
"xchg": [r32/m32, Xr32], [0x87], /r, 
"xchg": [r8, xr8/m8], [0x86], /r, 
"xchg": [r16, xr16/m16], [0x6687], /r, 
"xchg": [r32, Xr32/m32], [0x87], /r, 
"xlatb": [], [0xD7], 
"xor": [al, ib/ub], [0x34], ib, 
"xor": [ax, iw/uw], [0x6635], iw, 
"xor": [eax, id/ud], [0x35], id, 
"xor": [r8/m8, ib/ub], [0x80], /6, ib, 
"xor": [r16/m16, iw/uw], [0x6681], /6, iw, 
"xor": [r32/m32, id/ud], [0x81], /6, id, 
"xor": [r16/m16, ib], [0x6683], /6, ib, 
"xor": [r32/m32, ib], [0x83], /6, ib, 
"xor": [r8/m8, r8], [0x30], /r, 
"xor": [r16/m16, r16], [0x6631], /r, 
"xor": [r32/m32, r32], [0x31], /r, 
"xor": [r8, r8/m8], [0x32], /r, 
"xor": [r16, r16/m16], [0x6633], /r, 
"xor": [r32, r32/m32], [0x33], /r, 
"enter": [w/uw, ib/ub], [0xC8], iw, 
"leave": [], [0xC9], 
"lahf": [ah], [0x9F], 
"sahf": [ah], [0x9E], 
"syscall": [], [0x0F05], 
"sysenter": [], [0x0F34], 
"sysexit": [], [0x0F35], 
"sysret": [], [0x0F07], 
"clts": [], [0x0F06], 
"hlt": [], [0xF4], 
"invd": [], [0x0F08], 
"invlpg": [mem], [0x0F01], /7, 
"invpcid": [r32, Rm128], [0x660F3882], /r, 
"invpcid": [r64, Rm128], [0x660F3882], /r, 
"lgdt": [mem], [0x0F01], /2, 
"lidt": [mem], [0x0F01], /3, 
"lldt": [r16/m16], [0x0F00], /2, 
"lmsw": [r16/m16], [0x0F01], /6, 
"ltr": [r16/m16], [0x0F00], /3, 
"monitor": [dszax, Recx, Redx], [0x0F01C8], 
"monitorx": [dszax, Recx, Redx], [0x0F01FA], 
"mwait": [eax, Recx], [0x0F01C9], 
"mwaitx": [eax, Recx, Rebx], [0x0F01FB], 
"rdpmc": [edx,Weax,Recx], [0x0F33], 
"rdmsr": [edx,Weax,Recx], [0x0F32], 
"wrmsr": [edx,Reax,Recx], [0x0F30], 
"wbinvd": [], [0x0F09], 
"swapgs": [], [0x0F01F8], 
"xgetbv": [edx, Weax, Recx], [0x0F01D0], 
"xsetbv": [edx, Reax, Recx], [0x0F01D1], 
"rdtsc": [edx, Weax], [0x0F31], 
"rdtscp": [edx, Weax, Wecx], [0x0F01F9], 
"fxrstor": [mem], [0x0FAE], /1, 
"fxsave": [mem], [0x0FAE], /0, 
"xrstor": [mem, edx, eax], [0x0FAE], /5, 
"xrstors": [mem, edx, eax], [0x0FC7], /3, 
"xsave": [mem, edx, eax], [0x0FAE], /4, 
"xsavec": [mem, edx, eax], [0x0FC7], /4, 
"xsaveopt": [mem, edx, eax], [0x0FAE], /6, 
"xsaves": [mem, edx, eax], [0x0FC7], /5, 
"xbegin": [el16], [0x66C7], /7, cw, 
"xbegin": [el32], [0xC7], /7, cd, 
"xend": [], [0x0F01D5], 
"xtest": [], [0x0F01D6], 
"xabort": [b/ub], [0xC6], /7, ib, 
"adcx": [r32, r32/m32], [0x660F38F6], /r, 
"adox": [r32, r32/m32], [0xF30F38F6], /r, 
"lzcnt": [r16, r16/m16], [0x66F30FBD], /r, 
"lzcnt": [r32, r32/m32], [0xF30FBD], /r, 
"popcnt": [r16, r16/m16], [0x66F30FB8], /r, 
"popcnt": [r32, r32/m32], [0xF30FB8], /r, 
"tzcnt": [r16, r16/m16], [0x66F30FBC], /r, 
"tzcnt": [r32, r32/m32], [0xF30FBC], /r, 
"crc32": [r32, r8/m8], [0xF20F38F0], /r, 
"crc32": [r32, r16/m16], [0x66F20F38F1], /r, 
"crc32": [r32, r32/m32], [0xF20F38F1], /r, 
"movbe": [r16, m16], [0x660F38F0], /r, 
"movbe": [r32, m32], [0x0F38F0], /r, 
"movbe": [m16, r16], [0x660F38F1], /r, 
"movbe": [m32, r32], [0x0F38F1], /r, 
"getsec": [], [0x0F37], 
"invept": [r32, Rm128], [0x660F3880], /r, 
"invept": [r64, Rm128], [0x660F3880], /r, 
"invvpid": [r32, Rm128], [0x660F3881], /r, 
"invvpid": [r64, Rm128], [0x660F3881], /r, 
"vmcall": [], [0x0F01C1], 
"vmclear": [m64], [0x660FC7], /6, 
"vmfunc": [], [0x0F01D4], 
"vmlaunch": [], [0x0F01C2], 
"vmptrld": [m64], [0x0FC7], /6, 
"vmptrst": [m64], [0x0FC7], /7, 
"vmread": [r32/m32, Rr32], [0x0F78], /r, 
"vmread": [r64/m64, Rr64], [0x0F78], /r, 
"vmresume": [], [0x0F01C3], 
"vmwrite": [r32, Rr32/m32], [0x0F79], /r, 
"vmwrite": [r64, Rr64/m64], [0x0F79], /r, 
"vmxon": [m64], [0xF30FC7], /6, 
"skinit": [eax], [0x0F01DE], 
"stgi": [], [0x0F01DC], 
"clgi": [], [0x0F01DD], 
"invlpga": [eax, Recx], [0x0F01DF], 
"invlpga": [rax, Recx], [0x0F01DF], 
"vmload": [eax], [0x0F01DA], 
"vmload": [rax], [0x0F01DA], 
"vmmcall": [], [0x0F01D9], 
"vmrun": [eax], [0x0F01D8], 
"vmrun": [rax], [0x0F01D8], 
"vmsave": [eax], [0x0F01DB], 
"vmsave": [rax], [0x0F01DB], 
"f2xm1": [], [0xD9F0], 
"fabs": [], [0xD9E1], 
"fadd": [m32fp], [0xD8], /0, 
"fadd": [m64fp], [0xDC], /0, 
"fadd": [t(0), st(i)], [0xD8C0], +i, 
"fadd": [t(i), st(0)], [0xDCC0], +i, 
"faddp": [], [0xDEC1], 
"faddp": [t(i)], [0xDEC0], +i, 
"fbld": [m80dec], [0xDF], /4, 
"fbstp": [m80bcd], [0xDF], /6, 
"fchs": [], [0xD9E0], 
"fclex": [], [0x9BDBE2], 
"fcmovb": [t(i)], [0xDAC0], +i, 
"fcmovbe": [t(i)], [0xDAD0], +i, 
"fcmove": [t(i)], [0xDAC8], +i, 
"fcmovnb": [t(i)], [0xDBC0], +i, 
"fcmovnbe": [t(i)], [0xDBD0], +i, 
"fcmovne": [t(i)], [0xDBC8], +i, 
"fcmovnu": [t(i)], [0xDBD8], +i, 
"fcmovu": [t(i)], [0xDAD8], +i, 
"fcom": [], [0xD8D1], 
"fcom": [m32fp], [0xD8], /2, 
"fcom": [m64fp], [0xDC], /2, 
"fcom": [st(i)], [0xD8D0], +i, 
"fcomi": [st(i)], [0xDBF0], +i, 
"fcomip": [st(i)], [0xDFF0], +i, 
"fcomp": [], [0xD8D9], 
"fcomp": [m32fp], [0xD8], /3, 
"fcomp": [m64fp], [0xDC], /3, 
"fcomp": [st(i)], [0xD8D8], +i, 
"fcompp": [], [0xDED9], 
"fcos": [], [0xD9FF], 
"fdecstp": [], [0xD9F6], 
"fdiv": [m32fp], [0xD8], /6, 
"fdiv": [m64fp], [0xDC], /6, 
"fdiv": [t(0), st(i)], [0xD8F0], +i, 
"fdiv": [t(i), st(0)], [0xDCF8], +i, 
"fdivp": [], [0xDEF9], 
"fdivp": [t(i)], [0xDEF8], +i, 
"fdivr": [m32fp], [0xD8], /7, 
"fdivr": [m64fp], [0xDC], /7, 
"fdivr": [t(0), st(i)], [0xD8F8], +i, 
"fdivr": [t(i), st(0)], [0xDCF0], +i, 
"fdivrp": [], [0xDEF1], 
"fdivrp": [t(i)], [0xDEF0], +i, 
"ffree": [t(i)], [0xDDC0], +i, 
"fiadd": [m16int], [0xDE], /0, 
"fiadd": [m32int], [0xDA], /0, 
"ficom": [m16int], [0xDE], /2, 
"ficom": [m32int], [0xDA], /2, 
"ficomp": [m16int], [0xDE], /3, 
"ficomp": [m32int], [0xDA], /3, 
"fidiv": [m16int], [0xDE], /6, 
"fidiv": [m32int], [0xDA], /6, 
"fidivr": [m16int], [0xDE], /7, 
"fidivr": [m32int], [0xDA], /7, 
"fild": [m16int], [0xDF], /0, 
"fild": [m32int], [0xDB], /0, 
"fild": [m64int], [0xDF], /5, 
"fimul": [m16int], [0xDE], /1, 
"fimul": [m32int], [0xDA], /1, 
"fincstp": [], [0xD9F7], 
"finit": [], [0x9BDBE3], 
"fist": [m16int], [0xDF], /2, 
"fist": [m32int], [0xDB], /2, 
"fistp": [m16int], [0xDF], /3, 
"fistp": [m32int], [0xDB], /3, 
"fistp": [m64int], [0xDF], /7, 
"fisttp": [m16int], [0xDF], /1, 
"fisttp": [m32int], [0xDB], /1, 
"fisttp": [m64int], [0xDD], /1, 
"fisub": [m16int], [0xDE], /4, 
"fisub": [m32int], [0xDA], /4, 
"fisubr": [m16int], [0xDE], /5, 
"fisubr": [m32int], [0xDA], /5, 
"fld": [m32fp], [0xD9], /0, 
"fld": [m64fp], [0xDD], /0, 
"fld": [m80fp], [0xDB], /5, 
"fld": [st(i)], [0xD9C0], +i, 
"fld1": [], [0xD9E8], 
"fldcw": [m16], [0xD9], /5, 
"fldenv": [mem], [0xD9], /4, 
"fldl2e": [], [0xD9EA], 
"fldl2t": [], [0xD9E9], 
"fldlg2": [], [0xD9EC], 
"fldln2": [], [0xD9ED], 
"fldpi": [], [0xD9EB], 
"fldz": [], [0xD9EE], 
"fmul": [32fp], [0xD8], /1, 
"fmul": [64fp], [0xDC], /1, 
"fmul": [t(0), st(i)], [0xD8C8], +i, 
"fmul": [t(i), st(0)], [0xDCC8], +i, 
"fmulp": [], [0xDEC9], 
"fmulp": [t(i)], [0xDEC8], +i, 
"fnclex": [], [0xDBE2], 
"fninit": [], [0xDBE3], 
"fnop": [], [0xD9D0], 
"fnsave": [mem], [0xDD], /6, 
"fnstcw": [m16], [0xD9], /7, 
"fnstenv": [mem], [0xD9], /6, 
"fnstsw": [ax], [0xDFE0], 
"fnstsw": [m16], [0xDD], /7, 
"fpatan": [], [0xD9F3], 
"fprem": [], [0xD9F8], 
"fprem1": [], [0xD9F5], 
"fptan": [], [0xD9F2], 
"frndint": [], [0xD9FC], 
"frstor": [mem], [0xDD], /4, 
"fsave": [mem], [0x9BDD], /6, 
"fscale": [], [0xD9FD], 
"fsin": [], [0xD9FE], 
"fsincos": [], [0xD9FB], 
"fsqrt": [], [0xD9FE], 
"fst": [m32fp], [0xD9], /2, 
"fst": [m64fp], [0xDD], /2, 
"fst": [st(i)], [0xDDD0], +i, 
"fstcw": [m16], [0x9BD9], /7, 
"fstenv": [mem], [0x9BD9], /6, 
"fstp": [m32fp], [0xD9], /3, 
"fstp": [m64fp], [0xDD], /3, 
"fstp": [m80fp], [0xDB], /7, 
"fstp": [st(i)], [0xDDD8], +i, 
"fstsw": [ax], [0x9BDFE0], 
"fstsw": [m16], [0x9BDD], /7, 
"fsub": [m32fp], [0xD8], /4, 
"fsub": [m64fp], [0xDC], /4, 
"fsub": [t(0), st(i)], [0xD8E0], +i, 
"fsub": [t(i), st(0)], [0xDCE8], +i, 
"fsubp": [], [0xDEE9], 
"fsubp": [t(i)], [0xDEE8], +i, 
"fsubr": [m32fp], [0xD8], /5, 
"fsubr": [m64fp], [0xDC], /5, 
"fsubr": [t(0), st(i)], [0xD8E8], +i, 
"fsubr": [t(i), st(0)], [0xDCE0], +i, 
"fsubrp": [], [0xDEE1], 
"fsubrp": [t(i)], [0xDEE0], +i, 
"ftst": [], [0xD9E4], 
"fucom": [], [0xDDE1], 
"fucom": [st(i)], [0xDDE0], +i, 
"fucomi": [st(i)], [0xDBE8], +i, 
"fucomip": [st(i)], [0xDFE8], +i, 
"fucomp": [], [0xDDE9], 
"fucomp": [st(i)], [0xDDE8], +i, 
"fucompp": [], [0xDAE9], 
"fwait/wait": [], [0xDB], 
"fxam": [], [0xD9E5], 
"fxch": [], [0xD9C9], 
"fxch": [t(i)], [0xD9C8], +i, 
"fxtract": [], [0xD9F4], 
"fyl2x": [], [0xD9F1], 
"fyl2xp1": [], [0xD9F9], 
"addpd": [xmm, xmm/m128], [0x660F58], /r, 
"addps": [xmm, xmm/m128], [0x0F58], /r, 
"addsd": [xmm[70], xmm[70]/m64], [0xF20F58], /r, 
"addss": [xmm[30], xmm[30]/m32], [0xF30F58], /r, 
"addsubpd": [xmm, xmm/m128], [0x660FD0], /r, 
"addsubps": [xmm, xmm/m128], [0xF20FD0], /r, 
"andnpd": [xmm, xmm/m128], [0x660F55], /r, 
"andnps": [xmm, xmm/m128], [0x0F55], /r, 
"andpd": [xmm, xmm/m128], [0x660F54], /r, 
"andps": [xmm, xmm/m128], [0x0F54], /r, 
"blendpd": [xmm, xmm/m128, ib/ub], [0x660F3A0D], /r, ib, 
"blendps": [xmm, xmm/m128, ib/ub], [0x660F3A0C], /r, ib, 
"blendvpd": [xmm, xmm/m128, xmm0], [0x660F3815], /r, 
"blendvps": [xmm, xmm/m128, xmm0], [0x660F3814], /r, 
"cmppd": [xmm, xmm/m128, ib/ub], [0x660FC2], /r, ib, 
"cmpps": [xmm, xmm/m128, ib/ub], [0x0FC2], /r, ib, 
"cmpsd": [xmm[70], xmm[70]/m64, ib/ub], [0xF20FC2], /r, ib, 
"cmpss": [xmm[30], xmm[30]/m32, ib/ub], [0xF30FC2], /r, ib, 
"comisd": [xmm[70], xmm[70]/m64], [0x660F2F], /r, 
"comiss": [xmm[30], xmm[30]/m32], [0x0F2F], /r, 
"cvtdq2pd": [xmm, xmm[70]/m64], [0xF30FE6], /r, 
"cvtdq2ps": [xmm, xmm/m128], [0x0F5B], /r, 
"cvtpd2dq": [xmm[70], xmm/m128], [0xF20FE6], /r, 
"cvtpd2pi": [mm, xmm/m128], [0x660F2D], /r, 
"cvtpd2ps": [xmm[70], xmm/m128], [0x660F5A], /r, 
"cvtpi2pd": [xmm, Rmm[70]/m64], [0x660F2A], /r, 
"cvtpi2ps": [xmm[70], mm/m64], [0x0F2A], /r, 
"cvtps2dq": [xmm, xmm/m128], [0x660F5B], /r, 
"cvtps2pd": [xmm, xmm[70]/m64], [0x0F5A], /r, 
"cvtps2pi": [mm, xmm[70]/m64], [0x0F2D], /r, 
"cvtsd2si": [r32, xmm[70]/m64], [0xF20F2D], /r, 
"cvtsd2ss": [xmm[30], xmm[70]/m64], [0xF20F5A], /r, 
"cvtsi2sd": [xmm[70], r32/m32], [0xF20F2A], /r, 
"cvtsi2ss": [xmm[30], r32/m32], [0xF30F2A], /r, 
"cvtss2sd": [xmm[70], xmm[30]/m32], [0xF30F5A], /r, 
"cvtss2si": [r32, xmm[30]/m32], [0xF30F2D], /r, 
"cvttpd2dq": [xmm[70], xmm/m128], [0x660FE6], /r, 
"cvttpd2pi": [mm, xmm/m128], [0x660F2C], /r, 
"cvttps2dq": [xmm, xmm/m128], [0xF30F5B], /r, 
"cvttps2pi": [mm, xmm[70]/m64], [0x0F2C], /r, 
"cvttsd2si": [r32, xmm[70]/m64], [0xF20F2C], /r, 
"cvttss2si": [r32, xmm[30]/m32], [0xF30F2C], /r, 
"divpd": [xmm, xmm/m128], [0x660F5E], /r, 
"divps": [xmm, xmm/m128], [0x0F5E], /r, 
"divsd": [xmm[70], xmm[70]/m64], [0xF20F5E], /r, 
"divss": [xmm[30], xmm[30]/m32], [0xF30F5E], /r, 
"dppd": [xmm, xmm/m128, ib/ub], [0x660F3A41], /r, ib, 
"dpps": [xmm, xmm/m128, ib/ub], [0x660F3A40], /r, ib, 
"extractps": [r32/m32, xmm, ib/ub], [0x660F3A17], /r, ib, 
"extractps": [r64, xmm, ib/ub], [0x660F3A17], /r, ib, 
"extrq": [xmm, ib/ub, ib/ub], [0x660F78], /0, ib, 
"extrq": [xmm, xmm], [0x660F79], /r, 
"haddpd": [xmm, xmm/m128], [0x660F7C], /r, 
"haddps": [xmm, xmm/m128], [0xF20F7C], /r, 
"hsubpd": [xmm, xmm/m128], [0x660F7D], /r, 
"hsubps": [xmm, xmm/m128], [0xF20F7D], /r, 
"insertps": [xmm, xmm[30]/m32, ib/ub], [0x660F3A21], /r, ib, 
"insertq": [xmm, xmm], [0xF20F79], /r, 
"insertq": [xmm, xmm, ib/ub, ib/ub], [0xF20F78], /r, ib, 
"lddqu": [xmm, m128], [0xF20FF0], /r, 
"maskmovdqu": [xmm, xmm, Xdszdi], [0x660FF7], /r, 
"maskmovq": [mm, mm, Xdszdi], [0x0FF7], /r, 
"maxpd": [xmm, xmm/m128], [0x660F5F], /r, 
"maxps": [xmm, xmm/m128], [0x0F5F], /r, 
"maxsd": [xmm[70], xmm[70]/m64], [0xF20F5F], /r, 
"maxss": [xmm[30], xmm[30]/m32], [0xF30F5F], /r, 
"minpd": [xmm, xmm/m128], [0x660F5D], /r, 
"minps": [xmm, xmm/m128], [0x0F5D], /r, 
"minsd": [xmm[70], xmm[70]/m64], [0xF20F5D], /r, 
"minss": [xmm[30], xmm[30]/m32], [0xF30F5D], /r, 
"movapd": [xmm, xmm/m128], [0x660F28], /r, 
"movapd": [xmm/m128, xmm], [0x660F29], /r, 
"movaps": [xmm, xmm/m128], [0x0F28], /r, 
"movaps": [xmm/m128, xmm], [0x0F29], /r, 
"movd": [mm[30], Rr32[30]/m32], [0x0F6E], /r, 
"movd": [mm[30], Rr64[30]], [0x0F6E], /r, 
"movd": [r32[30]/m32, Rmm[30]], [0x0F7E], /r, 
"movd": [r64[30], Rmm[30]], [0x0F7E], /r, 
"movd": [r32[30]/m32, xmm[30]], [0x660F7E], /r, 
"movd": [r64[30], xmm[30]], [0x660F7E], /r, 
"movd": [xmm[30], Rr32[30]/m32], [0x660F6E], /r, 
"movd": [xmm[30], Rr64[30]], [0x660F6E], /r, 
"movddup": [xmm, xmm[70]/m64], [0xF20F12], /r, 
"movdq2q": [mm, xmm[70]], [0xF20FD6], /r, 
"movdqa": [xmm, xmm/m128], [0x660F6F], /r, 
"movdqa": [xmm/m128, xmm], [0x660F7F], /r, 
"movdqu": [xmm, xmm/m128], [0xF30F6F], /r, 
"movdqu": [xmm/m128, xmm], [0xF30F7F], /r, 
"movhlps": [xmm[70], xmm[158]], [0x0F12], /r, 
"movhpd": [m64, xmm[158]], [0x660F17], /r, 
"movhpd": [xmm[158], m64], [0x660F16], /r, 
"movhps": [m64, xmm[158]], [0x0F17], /r, 
"movhps": [xmm[158], m64], [0x0F16], /r, 
"movlhps": [xmm[158], xmm[70]], [0x0F16], /r, 
"movlpd": [m64, xmm[70]], [0x660F13], /r, 
"movlpd": [xmm[70], m64], [0x660F12], /r, 
"movlps": [m64, xmm[70]], [0x0F13], /r, 
"movlps": [xmm[70], m64], [0x0F12], /r, 
"movmskpd": [r32[0], xmm], [0x660F50], /r, 
"movmskpd": [r64[0], xmm], [0x660F50], /r, 
"movmskps": [r32[0], xmm], [0x0F50], /r, 
"movmskps": [r64[0], xmm], [0x0F50], /r, 
"movntdq": [m128, xmm], [0x660FE7], /r, 
"movntdqa": [xmm, m128], [0x660F382A], /r, 
"movnti": [m32, r32], [0x0FC3], /r, 
"movntpd": [m128, xmm], [0x660F2B], /r, 
"movntps": [m128, xmm], [0x0F2B], /r, 
"movntq": [m64, mm], [0x0FE7], /r, 
"movntsd": [m64, xmm[70]], [0xF20F2B], /r, 
"movntss": [m32, xmm[30]], [0xF30F2B], /r, 
"movq": [mm, mm/m64], [0x0F6F], /r, 
"movq": [mm/m64, mm], [0x0F7F], /r, 
"movq": [xmm[70], xmm[70]/m64], [0xF30F7E], /r, 
"movq": [xmm[70]/m64, xmm[70]], [0x660FD6], /r, 
"movq2dq": [xmm[70], mm], [0xF30FD6], /r, 
"movsd": [xmm[70], xmm[70]], [0xF20F10], /r, 
"movsd": [xmm[70], m64], [0xF20F10], /r, 
"movsd": [m64, xmm[70]], [0xF20F11], /r, 
"movshdup": [xmm, xmm/m128], [0xF30F16], /r, 
"movsldup": [xmm, xmm/m128], [0xF30F12], /r, 
"movss": [xmm[30], xmm[30]], [0xF30F10], /r, 
"movss": [xmm[30], m32], [0xF30F10], /r, 
"movss": [m32, xmm[30]], [0xF30F11], /r, 
"movupd": [xmm, xmm/m128], [0x660F10], /r, 
"movupd": [xmm/m128, xmm], [0x660F11], /r, 
"movups": [xmm, xmm/m128], [0x0F10], /r, 
"movups": [xmm/m128, xmm], [0x0F11], /r, 
"mpsadbw": [xmm, xmm/m128, ib/ub], [0x660F3A42], /r, ib, 
"mulpd": [xmm, xmm/m128], [0x660F59], /r, 
"mulps": [xmm, xmm/m128], [0x0F59], /r, 
"mulsd": [xmm[70], xmm[70]/m64], [0xF20F59], /r, 
"mulss": [xmm[30], xmm[30]/m32], [0xF30F59], /r, 
"orpd": [xmm, xmm/m128], [0x660F56], /r, 
"orps": [xmm, xmm/m128], [0x0F56], /r, 
"pabsb": [mm, mm/m64], [0x0F381C], /r, 
"pabsb": [xmm, xmm/m128], [0x660F381C], /r, 
"pabsd": [mm, mm/m64], [0x0F381E], /r, 
"pabsd": [xmm, xmm/m128], [0x660F381E], /r, 
"pabsw": [mm, mm/m64], [0x0F381D], /r, 
"pabsw": [xmm, xmm/m128], [0x660F381D], /r, 
"packssdw": [mm, mm/m64], [0x0F6B], /r, 
"packssdw": [xmm, xmm/m128], [0x660F6B], /r, 
"packsswb": [mm, mm/m64], [0x0F63], /r, 
"packsswb": [xmm, xmm/m128], [0x660F63], /r, 
"packusdw": [xmm, xmm/m128], [0x660F382B], /r, 
"packuswb": [mm, mm/m64], [0x0F67], /r, 
"packuswb": [xmm, xmm/m128], [0x660F67], /r, 
"paddb": [mm, mm/m64], [0x0FFC], /r, 
"paddb": [xmm, xmm/m128], [0x660FFC], /r, 
"paddd": [mm, mm/m64], [0x0FFE], /r, 
"paddd": [xmm, xmm/m128], [0x660FFE], /r, 
"paddq": [mm, mm/m64], [0x0FD4], /r, 
"paddq": [xmm, xmm/m128], [0x660FD4], /r, 
"paddsb": [mm, mm/m64], [0x0FEC], /r, 
"paddsb": [xmm, xmm/m128], [0x660FEC], /r, 
"paddsw": [mm, mm/m64], [0x0FED], /r, 
"paddsw": [xmm, xmm/m128], [0x660FED], /r, 
"paddusb": [mm, mm/m64], [0x0FDC], /r, 
"paddusb": [xmm, xmm/m128], [0x660FDC], /r, 
"paddusw": [mm, mm/m64], [0x0FDD], /r, 
"paddusw": [xmm, xmm/m128], [0x660FDD], /r, 
"paddw": [mm, mm/m64], [0x0FFD], /r, 
"paddw": [xmm, xmm/m128], [0x660FFD], /r, 
"palignr": [mm, mm/m64, ib/ub], [0x0F3A0F], /r, ib, 
"palignr": [xmm, xmm/m128, ib/ub], [0x660F3A0F], /r, ib, 
"pand": [mm, mm/m64], [0x0FDB], /r, 
"pand": [xmm, xmm/m128], [0x660FDB], /r, 
"pandn": [mm, mm/m64], [0x0FDF], /r, 
"pandn": [xmm, xmm/m128], [0x660FDF], /r, 
"pavgb": [mm, mm/m64], [0x0FE0], /r, 
"pavgb": [xmm, xmm/m128], [0x660FE0], /r, 
"pavgw": [mm, mm/m64], [0x0FE3], /r, 
"pavgw": [xmm, xmm/m128], [0x660FE3], /r, 
"pblendvb": [xmm, xmm/m128, xmm0], [0x660FE0], /r, 
"pblendw": [xmm, xmm/m128, ib/ub], [0x660F3A0E], /r, ib, 
"pclmulqdq": [xmm, xmm/m128, ib/ub], [0x660F3A44], /r, ib, 
"pcmpeqb": [mm, mm/m64], [0x0F74], /r, 
"pcmpeqb": [xmm, xmm/m128], [0x660F74], /r, 
"pcmpeqd": [mm, mm/m64], [0x0F76], /r, 
"pcmpeqd": [xmm, xmm/m128], [0x660F76], /r, 
"pcmpeqq": [xmm, xmm/m128], [0x660F3829], /r, 
"pcmpeqw": [mm, mm/m64], [0x0F75], /r, 
"pcmpeqw": [xmm, xmm/m128], [0x660F75], /r, 
"pcmpestri": [xmm, xmm/m128, ib/ub, Wecx,eax,edx], [0x660F3A61], /r, ib, 
"pcmpestrm": [xmm, xmm/m128, ib/ub, Wxmm0,eax,edx], [0x660F3A60], /r, ib, 
"pcmpgtb": [mm, mm/m64], [0x0F64], /r, 
"pcmpgtb": [xmm, xmm/m128], [0x660F64], /r, 
"pcmpgtd": [mm, mm/m64], [0x0F66], /r, 
"pcmpgtd": [xmm, xmm/m128], [0x660F66], /r, 
"pcmpgtq": [xmm, xmm/m128], [0x660F3837], /r, 
"pcmpgtw": [mm, mm/m64], [0x0F65], /r, 
"pcmpgtw": [xmm, xmm/m128], [0x660F65], /r, 
"pcmpistri": [xmm, xmm/m128, ib/ub, Wecx], [0x660F3A63], /r, ib, 
"pcmpistrm": [xmm, xmm/m128, ib/ub, Wxmm0], [0x660F3A62], /r, ib, 
"pextrb": [r32[0]/m8, xmm, ib/ub], [0x660F3A14], /r, ib, 
"pextrb": [r64[0], xmm, ib/ub], [0x660F3A14], /r, ib, 
"pextrd": [r32[30]/m32, xmm, ib/ub], [0x660F3A16], /r, ib, 
"pextrd": [r64[30], xmm, ib/ub], [0x660F3A16], /r, ib, 
"pextrw": [r32[10], mm, ib/ub], [0x0FC5], /r, ib, 
"pextrw": [r64[10], mm, ib/ub], [0x0FC5], /r, ib, 
"pextrw": [r32[10], xmm, ib/ub], [0x660FC5], /r, ib, 
"pextrw": [r64[10], xmm, ib/ub], [0x660FC5], /r, ib, 
"pextrw": [r32[10]/m16, xmm, ib/ub], [0x660F3A15], /r, ib, 
"pextrw": [r64[10], xmm, ib/ub], [0x660F3A15], /r, ib, 
"phaddd": [mm, mm/m64], [0x0F3802], /r, 
"phaddd": [xmm, xmm/m128], [0x660F3802], /r, 
"phaddsw": [mm, mm/m64], [0x0F3803], /r, 
"phaddsw": [xmm, xmm/m128], [0x660F3803], /r, 
"phaddw": [mm, mm/m64], [0x0F3801], /r, 
"phaddw": [xmm, xmm/m128], [0x660F3801], /r, 
"phminposuw": [xmm[20], xmm/m128], [0x660F3841], /r, 
"phsubd": [mm, mm/m64], [0x0F3806], /r, 
"phsubd": [xmm, xmm/m128], [0x660F3806], /r, 
"phsubsw": [mm, mm/m64], [0x0F3807], /r, 
"phsubsw": [xmm, xmm/m128], [0x660F3807], /r, 
"phsubw": [mm, mm/m64], [0x0F3805], /r, 
"phsubw": [xmm, xmm/m128], [0x660F3805], /r, 
"pinsrb": [xmm, r32[0]/m8, ib/ub], [0x660F3A20], /r, ib, 
"pinsrb": [xmm, r64[0], ib/ub], [0x660F3A20], /r, ib, 
"pinsrd": [xmm, r32[30]/m32, ib/ub], [0x660F3A22], /r, ib, 
"pinsrd": [xmm, r64[30], ib/ub], [0x660F3A22], /r, ib, 
"pinsrw": [mm, r32[10]/m16, ib/ub], [0x0FC4], /r, ib, 
"pinsrw": [mm, r64[10], ib/ub], [0x0FC4], /r, ib, 
"pinsrw": [xmm, r32[10]/m16, ib/ub], [0x660FC4], /r, ib, 
"pinsrw": [xmm, r64[10], ib/ub], [0x660FC4], /r, ib, 
"pmaddubsw": [mm, mm/m64], [0x0F3804], /r, 
"pmaddubsw": [xmm, xmm/m128], [0x660F3804], /r, 
"pmaddwd": [mm, mm/m64], [0x0FF5], /r, 
"pmaddwd": [xmm, xmm/m128], [0x660FF5], /r, 
"pmaxsb": [xmm, xmm/m128], [0x660F383C], /r, 
"pmaxsd": [xmm, xmm/m128], [0x660F383D], /r, 
"pmaxsw": [mm, mm/m64], [0x0FEE], /r, 
"pmaxsw": [xmm, xmm/m128], [0x660FEE], /r, 
"pmaxub": [mm, mm/m64], [0x0FDE], /r, 
"pmaxub": [xmm, xmm/m128], [0x660FDE], /r, 
"pmaxud": [xmm, xmm/m128], [0x660F383F], /r, 
"pmaxuw": [xmm, xmm/m128], [0x660F383E], /r, 
"pminsb": [xmm, xmm/m128], [0x660F3838], /r, 
"pminsd": [xmm, xmm/m128], [0x660F3839], /r, 
"pminsw": [mm, mm/m64], [0x0FEA], /r, 
"pminsw": [xmm, xmm/m128], [0x660FEA], /r, 
"pminub": [mm, mm/m64], [0x0FDA], /r, 
"pminub": [xmm, xmm/m128], [0x660FDA], /r, 
"pminud": [xmm, xmm/m128], [0x660F383B], /r, 
"pminuw": [xmm, xmm/m128], [0x660F383A], /r, 
"pmovmskb": [r32[0], mm], [0x0FD7], /r, 
"pmovmskb": [r64[0], mm], [0x0FD7], /r, 
"pmovmskb": [r32[10], xmm], [0x660FD7], /r, 
"pmovmskb": [r64[10], xmm], [0x660FD7], /r, 
"pmovsxbd": [xmm, xmm[30]/m32], [0x660F3821], /r, 
"pmovsxbq": [xmm, xmm[10]/m16], [0x660F3822], /r, 
"pmovsxbw": [xmm, xmm[70]/m64], [0x660F3820], /r, 
"pmovsxdq": [xmm, xmm[70]/m64], [0x660F3825], /r, 
"pmovsxwd": [xmm, xmm[70]/m64], [0x660F3823], /r, 
"pmovsxwq": [xmm, xmm[30]/m32], [0x660F3824], /r, 
"pmovzxbd": [xmm, xmm[30]/m32], [0x660F3831], /r, 
"pmovzxbq": [xmm, xmm[10]/m16], [0x660F3832], /r, 
"pmovzxbw": [xmm, xmm[70]/m64], [0x660F3830], /r, 
"pmovzxdq": [xmm, xmm[70]/m64], [0x660F3835], /r, 
"pmovzxwd": [xmm, xmm[70]/m64], [0x660F3833], /r, 
"pmovzxwq": [xmm, xmm[30]/m32], [0x660F3834], /r, 
"pmuldq": [xmm, xmm/m128], [0x660F3828], /r, 
"pmulhrsw": [mm, mm/m64], [0x0F380B], /r, 
"pmulhrsw": [xmm, xmm/m128], [0x660F380B], /r, 
"pmulhuw": [mm, mm/m64], [0x0FE4], /r, 
"pmulhuw": [xmm, xmm/m128], [0x660FE4], /r, 
"pmulhw": [mm, mm/m64], [0x0FE5], /r, 
"pmulhw": [xmm, xmm/m128], [0x660FE5], /r, 
"pmulld": [xmm, xmm/m128], [0x660F3840], /r, 
"pmullw": [mm, mm/m64], [0x0FD5], /r, 
"pmullw": [xmm, xmm/m128], [0x660FD5], /r, 
"pmuludq": [mm, mm/m64], [0x0FF4], /r, 
"pmuludq": [xmm, xmm/m128], [0x660FF4], /r, 
"por": [mm, mm/m64], [0x0FEB], /r, 
"por": [xmm, xmm/m128], [0x660FEB], /r, 
"prefetchnta": [mem], [0x0F18], /0, 
"prefetcht0": [mem], [0x0F18], /1, 
"prefetcht1": [mem], [0x0F18], /2, 
"prefetcht2": [mem], [0x0F18], /3, 
"psadbw": [mm, mm/m64], [0x0FF6], /r, 
"psadbw": [xmm, xmm/m128], [0x660FF6], /r, 
"pshufb": [mm, mm/m64], [0x0F3800], /r, 
"pshufb": [xmm, xmm/m128], [0x660F3800], /r, 
"pshufd": [xmm, xmm/m128, ib/ub], [0x660F70], /r, ib, 
"pshufhw": [xmm, xmm/m128, ib/ub], [0xF30F70], /r, ib, 
"pshuflw": [xmm, xmm/m128, ib/ub], [0xF20F70], /r, ib, 
"pshufw": [mm, mm/m64, ib/ub], [0x0F70], /r, ib, 
"psignb": [mm, mm/m64], [0x0F3808], /r, 
"psignb": [xmm, xmm/m128], [0x660F3808], /r, 
"psignd": [mm, mm/m64], [0x0F380A], /r, 
"psignd": [xmm, xmm/m128], [0x660F380A], /r, 
"psignw": [mm, mm/m64], [0x0F3809], /r, 
"psignw": [xmm, xmm/m128], [0x660F3809], /r, 
"pslld": [mm, ib/ub], [0x0F72], /6, ib, 
"pslld": [mm, mm/m64], [0x0FF2], /r, 
"pslld": [xmm, ib/ub], [0x660F72], /6, ib, 
"pslld": [xmm, xmm/m128], [0x660FF2], /r, 
"pslldq": [xmm, ib/ub], [0x660F73], /7, ib, 
"psllq": [mm, ib/ub], [0x0F73], /6, ib, 
"psllq": [mm, mm/m64], [0x0FF3], /r, 
"psllq": [xmm, ib/ub], [0x660F73], /6, ib, 
"psllq": [xmm, xmm/m128], [0x660FF3], /r, 
"psllw": [mm, ib/ub], [0x0F71], /6, ib, 
"psllw": [mm, mm/m64], [0x0FF1], /r, 
"psllw": [xmm, ib/ub], [0x660F71], /6, ib, 
"psllw": [xmm, xmm/m128], [0x660FF1], /r, 
"psrad": [mm, ib/ub], [0x0F72], /4, ib, 
"psrad": [mm, mm/m64], [0x0FE2], /r, 
"psrad": [xmm, ib/ub], [0x660F72], /4, ib, 
"psrad": [xmm, xmm/m128], [0x660FE2], /r, 
"psraw": [mm, ib/ub], [0x0F71], /4, ib, 
"psraw": [mm, mm/m64], [0x0FE1], /r, 
"psraw": [xmm, ib/ub], [0x660F71], /4, ib, 
"psraw": [xmm, xmm/m128], [0x660FE1], /r, 
"psrld": [mm, ib/ub], [0x0F72], /2, ib, 
"psrld": [mm, mm/m64], [0x0FD2], /r, 
"psrld": [xmm, ib/ub], [0x660F72], /2, ib, 
"psrld": [xmm, xmm/m128], [0x660FD2], /r, 
"psrldq": [xmm, ib/ub], [0x660F73], /3, ib, 
"psrlq": [mm, ib/ub], [0x0F73], /2, ib, 
"psrlq": [mm, mm/m64], [0x0FD3], /r, 
"psrlq": [xmm, ib/ub], [0x660F73], /2, ib, 
"psrlq": [xmm, xmm/m128], [0x660FD3], /r, 
"psrlw": [mm, ib/ub], [0x0F71], /2, ib, 
"psrlw": [mm, mm/m64], [0x0FD1], /r, 
"psrlw": [xmm, ib/ub], [0x660F71], /2, ib, 
"psrlw": [xmm, xmm/m128], [0x660FD1], /r, 
"psubb": [mm, mm/m64], [0x0FF8], /r, 
"psubb": [xmm, xmm/m128], [0x660FF8], /r, 
"psubd": [mm, mm/m64], [0x0FFA], /r, 
"psubd": [xmm, xmm/m128], [0x660FFA], /r, 
"psubq": [mm, mm/m64], [0x0FFB], /r, 
"psubq": [xmm, xmm/m128], [0x660FFB], /r, 
"psubsb": [mm, mm/m64], [0x0FE8], /r, 
"psubsb": [xmm, xmm/m128], [0x660FE8], /r, 
"psubsw": [mm, mm/m64], [0x0FE9], /r, 
"psubsw": [xmm, xmm/m128], [0x660FE9], /r, 
"psubusb": [mm, mm/m64], [0x0FD8], /r, 
"psubusb": [xmm, xmm/m128], [0x660FD8], /r, 
"psubusw": [mm, mm/m64], [0x0FD9], /r, 
"psubusw": [xmm, xmm/m128], [0x660FD9], /r, 
"psubw": [mm, mm/m64], [0x0FF9], /r, 
"psubw": [xmm, xmm/m128], [0x660FF9], /r, 
"ptest": [xmm, xmm/m128], [0x660F3817], /r, 
"punpckhbw": [mm, mm/m64], [0x0F68], /r, 
"punpckhbw": [xmm, xmm/m128], [0x660F68], /r, 
"punpckhdq": [mm, mm/m64], [0x0F6A], /r, 
"punpckhdq": [xmm, xmm/m128], [0x660F6A], /r, 
"punpckhqdq": [xmm, xmm/m128], [0x660F6D], /r, 
"punpckhwd": [mm, mm/m64], [0x0F69], /r, 
"punpckhwd": [xmm, xmm/m128], [0x660F69], /r, 
"punpcklbw": [mm, mm/m64], [0x0F60], /r, 
"punpcklbw": [xmm, xmm/m128], [0x660F60], /r, 
"punpckldq": [mm, mm/m64], [0x0F62], /r, 
"punpckldq": [xmm, xmm/m128], [0x660F62], /r, 
"punpcklqdq": [xmm, xmm/m128], [0x660F6C], /r, 
"punpcklwd": [mm, mm/m64], [0x0F61], /r, 
"punpcklwd": [xmm, xmm/m128], [0x660F61], /r, 
"pxor": [mm, mm/m64], [0x0FEF], /r, 
"pxor": [xmm, xmm/m128], [0x660FEF], /r, 
"rcpps": [xmm, xmm/m128], [0x0F53], /r, 
"rcpss": [xmm[30], xmm[30]/m32], [0xF30F53], /r, 
"roundpd": [xmm, xmm/m128, ib/ub], [0x660F3A09], /r, ib, 
"roundps": [xmm, xmm/m128, ib/ub], [0x660F3A08], /r, ib, 
"roundsd": [xmm[70], xmm[70]/m64, ib/ub], [0x660F3A0B], /r, ib, 
"roundss": [xmm[30], xmm[30]/m32, ib/ub], [0x660F3A0A], /r, ib, 
"rsqrtps": [xmm, xmm/m128], [0x0F52], /r, 
"rsqrtss": [xmm[30], xmm[30]/m32], [0xF30F52], /r, 
"shufpd": [xmm, xmm/m128, ib/ub], [0x660FC6], /r, ib, 
"shufps": [xmm, xmm/m128, ib/ub], [0x0FC6], /r, ib, 
"sqrtpd": [xmm, xmm/m128], [0x660F51], /r, 
"sqrtps": [xmm, xmm/m128], [0x0F51], /r, 
"sqrtsd": [xmm[70], xmm[70]/m64], [0xF20F51], /r, 
"sqrtss": [xmm[30], xmm[30]/m32], [0xF30F51], /r, 
"subpd": [xmm, xmm/m128], [0x660F5C], /r, 
"subps": [xmm, xmm/m128], [0x0F5C], /r, 
"subsd": [xmm[70], xmm[70]/m64], [0xF20F5C], /r, 
"subss": [xmm[30], xmm[30]/m32], [0xF30F5C], /r, 
"ucomisd": [xmm[70], xmm[70]/m64], [0x660F2E], /r, 
"ucomiss": [xmm[30], xmm[30]/m32], [0x0F2E], /r, 
"unpckhpd": [xmm, xmm/m128], [0x660F15], /r, 
"unpckhps": [xmm, xmm/m128], [0x0F15], /r, 
"unpcklpd": [xmm, xmm/m128], [0x660F14], /r, 
"unpcklps": [xmm, xmm/m128], [0x0F14], /r, 
"xorpd": [xmm, xmm/m128], [0x660F57], /r, 
"xorps": [xmm, xmm/m128], [0x0F57], /r, 
"pavgusb": [mm, mm/m64], [0x0F0FBF], /r, 
"pf2id": [mm, mm/m64], [0x0F0F1D], /r, 
"pf2iw": [mm, mm/m64], [0x0F0F1C], /r, 
"pfacc": [mm, mm/m64], [0x0F0FAE], /r, 
"pfadd": [mm, mm/m64], [0x0F0F9E], /r, 
"pfcmpeq": [mm, mm/m64], [0x0F0FB0], /r, 
"pfcmpge": [mm, mm/m64], [0x0F0F90], /r, 
"pfcmpgt": [mm, mm/m64], [0x0F0FA0], /r, 
"pfmax": [mm, mm/m64], [0x0F0FA4], /r, 
"pfmin": [mm, mm/m64], [0x0F0F94], /r, 
"pfmul": [mm, mm/m64], [0x0F0FB4], /r, 
"pfnacc": [mm, mm/m64], [0x0F0F8A], /r, 
"pfpnacc": [mm, mm/m64], [0x0F0F8E], /r, 
"pfrcp": [mm, mm/m64], [0x0F0F96], /r, 
"pfrcpit1": [mm, mm/m64], [0x0F0FA6], /r, 
"pfrcpit2": [mm, mm/m64], [0x0F0FB6], /r, 
"pfrcpv": [mm, mm/m64], [0x0F0F86], /r, 
"pfrsqit1": [mm, mm/m64], [0x0F0FA7], /r, 
"pfrsqrt": [mm, mm/m64], [0x0F0F97], /r, 
"pfrsqrtv": [mm, mm/m64], [0x0F0F87], /r, 
"pfsub": [mm, mm/m64], [0x0F0F9A], /r, 
"pfsubr": [mm, mm/m64], [0x0F0FAA], /r, 
"pi2fd": [mm, mm/m64], [0x0F0F0D], /r, 
"pi2fw": [mm, mm/m64], [0x0F0F0C], /r, 
"pmulhrw": [mm, mm/m64], [0x0F0FB7], /r, 
"prefetch": [mem], [0x0F0D], /0, 
"pswapd": [mm, mm/m64], [0x0F0FBB], /r, 
"emms": [], [0x0F77], 
"femms": [], [0x0F0E], 
"lfence": [], [0x0FAE], /5, 
"mfence": [], [0x0FAE], /6, 
"sfence": [], [0x0FAE], /7, 
"ldmxcsr": [m32], [0x0FAE], /2, 
"stmxcsr": [m32], [0x0FAE], /3, 
"aesdec": [xmm, xmm/m128], [0x660F38DE], /r, 
"aesdeclast": [xmm, xmm/m128], [0x660F38DF], /r, 
"aesenc": [xmm, xmm/m128], [0x660F38DC], /r, 
"aesenclast": [xmm, xmm/m128], [0x660F38DD], /r, 
"aesimc": [xmm, xmm/m128], [0x660F38DB], /r, 
"aeskeygenassist": [xmm, xmm/m128, ib/ub], [0x660F3ADF], /r, ib, 
"sha1msg1": [mm, xmm/m128], [0x0F38C9], /r, 
"sha1msg2": [mm, xmm/m128], [0x0F38CA], /r, 
"sha1nexte": [mm, xmm/m128], [0x0F38C8], /r, 
"sha1rnds4": [mm, xmm/m128, ib/ub], [0x0F3ACC], /r, ib, 
"sha256msg1": [mm, xmm/m128], [0x0F38CC], /r, 
"sha256msg2": [mm, xmm/m128], [0x0F38CD], /r, 
"sha256rnds2": [mm, xmm/m128, xmm0], [0x0F38CB], /r, 
"gf2p8affineinvqb": [xmm, xmm/m128, ib/ub], [0x660F3ACF], /r, ib, 
"gf2p8affineqb": [xmm, xmm/m128, ib/ub], [0x660F3ACE], /r, ib, 
"gf2p8mulb": [xmm, xmm/m128], [0x660F38CF], /r, 
